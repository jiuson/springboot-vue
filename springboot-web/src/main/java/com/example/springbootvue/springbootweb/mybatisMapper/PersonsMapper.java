package com.example.springbootvue.springbootweb.mybatisMapper;

import com.example.springbootvue.springbootweb.entity.Persons;
import com.example.springbootvue.springbootweb.entity.PersonsExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface PersonsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table persons
     *
     * @mbg.generated
     */
    @SelectProvider(type=PersonsSqlProvider.class, method="countByExample")
    long countByExample(PersonsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table persons
     *
     * @mbg.generated
     */
    @DeleteProvider(type=PersonsSqlProvider.class, method="deleteByExample")
    int deleteByExample(PersonsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table persons
     *
     * @mbg.generated
     */
    @Delete({
        "delete from persons",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table persons
     *
     * @mbg.generated
     */
    @Insert({
        "insert into persons (id, create_datetime, ",
        "email, phone, sex, ",
        "username, zone)",
        "values (#{id,jdbcType=INTEGER}, #{createDatetime,jdbcType=TIMESTAMP}, ",
        "#{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, ",
        "#{username,jdbcType=VARCHAR}, #{zone,jdbcType=LONGVARBINARY})"
    })
    int insert(Persons record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table persons
     *
     * @mbg.generated
     */
    @InsertProvider(type=PersonsSqlProvider.class, method="insertSelective")
    int insertSelective(Persons record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table persons
     *
     * @mbg.generated
     */
    @SelectProvider(type=PersonsSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="create_datetime", property="createDatetime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="sex", property="sex", jdbcType=JdbcType.VARCHAR),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="zone", property="zone", jdbcType=JdbcType.LONGVARBINARY)
    })
    List<Persons> selectByExampleWithBLOBs(PersonsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table persons
     *
     * @mbg.generated
     */
    @SelectProvider(type=PersonsSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="create_datetime", property="createDatetime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="sex", property="sex", jdbcType=JdbcType.VARCHAR),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR)
    })
    List<Persons> selectByExample(PersonsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table persons
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, create_datetime, email, phone, sex, username, zone",
        "from persons",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="create_datetime", property="createDatetime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="sex", property="sex", jdbcType=JdbcType.VARCHAR),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="zone", property="zone", jdbcType=JdbcType.LONGVARBINARY)
    })
    Persons selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table persons
     *
     * @mbg.generated
     */
    @UpdateProvider(type=PersonsSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Persons record, @Param("example") PersonsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table persons
     *
     * @mbg.generated
     */
    @UpdateProvider(type=PersonsSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("record") Persons record, @Param("example") PersonsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table persons
     *
     * @mbg.generated
     */
    @UpdateProvider(type=PersonsSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Persons record, @Param("example") PersonsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table persons
     *
     * @mbg.generated
     */
    @UpdateProvider(type=PersonsSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Persons record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table persons
     *
     * @mbg.generated
     */
    @Update({
        "update persons",
        "set create_datetime = #{createDatetime,jdbcType=TIMESTAMP},",
          "email = #{email,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "sex = #{sex,jdbcType=VARCHAR},",
          "username = #{username,jdbcType=VARCHAR},",
          "zone = #{zone,jdbcType=LONGVARBINARY}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKeyWithBLOBs(Persons record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table persons
     *
     * @mbg.generated
     */
    @Update({
        "update persons",
        "set create_datetime = #{createDatetime,jdbcType=TIMESTAMP},",
          "email = #{email,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "sex = #{sex,jdbcType=VARCHAR},",
          "username = #{username,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Persons record);
}